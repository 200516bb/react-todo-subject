{"version":3,"sources":["components/AddTodo.jsx","components/Filter.jsx","components/Todo.jsx","components/TodoList.jsx","App.js","index.js"],"names":["AddTodo","addTodo","useState","inputText","setInputText","handleText","useCallback","e","target","value","submit","trim","length","id","type","onChange","onClick","React","memo","Filter","filter","changeFilter","backgroundColor","changeBackgroundColor","className","undefined","data-type","Todo","todo","idx","toggleComplete","completed","data-idx","text","dayjs","createdAt","format","TodoList","todos","filteredTodos","useMemo","map","App","JSON","parse","localStorage","getItem","setTodos","setFilter","setBackgroundColor","newTodos","uuid","Date","setItem","stringify","todoIdx","dataset","splice","getAttribute","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.140fb957.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\n\nconst AddTodo = ({ addTodo }) => {\n  const [inputText, setInputText] = useState('');\n\n  const handleText = useCallback(e => {\n    setInputText(e.target.value);\n  }, []);\n\n  const submit = useCallback(() => {\n    if (inputText.trim().length === 0) return;\n    addTodo(inputText);\n    setInputText('');\n  }, [inputText, addTodo]);\n\n  return (\n    <section id=\"todo-input\">\n      <input type=\"text\" value={inputText} onChange={handleText} />\n      <button onClick={submit}>Add</button>\n    </section>\n  );\n};\n\nexport default React.memo(AddTodo);\n","import React from 'react';\n\nconst Filter = ({ filter, changeFilter, backgroundColor, changeBackgroundColor }) => {\n  return (\n    <section className=\"todos-filter\">\n      <input type=\"color\" value={backgroundColor} onChange={changeBackgroundColor} />\n      <ul>\n        <button className={filter === 'all' ? 'active' : undefined} data-type=\"all\" onClick={changeFilter}>\n          ALL\n        </button>\n        <button className={filter === 'active' ? 'active' : undefined} data-type=\"active\" onClick={changeFilter}>\n          Active\n        </button>\n        <button className={filter === 'completed' ? 'active' : undefined} data-type=\"completed\" onClick={changeFilter}>\n          Completed\n        </button>\n      </ul>\n    </section>\n  );\n};\n\nexport default React.memo(Filter);\n","import React from 'react';\nimport dayjs from 'dayjs';\n\nconst Todo = ({ todo, idx, toggleComplete }) => {\n  return (\n    <li className=\"todo-item\">\n      <button\n        className={todo.completed ? 'completed' : undefined}\n        type=\"button\"\n        data-idx={idx}\n        onClick={toggleComplete}\n      />\n      <p>{todo.completed ? <del>{todo.text}</del> : todo.text}</p>\n      <time className=\"created-at\">{dayjs(todo.createdAt).format('YY-MM-DD HH:mm')}</time>\n    </li>\n  );\n};\n\nexport default Todo;\n","import React, { useMemo } from 'react';\nimport { Todo } from '.';\n\nconst TodoList = ({ filter, todos, toggleComplete }) => {\n  const filteredTodos = useMemo(() => {\n    switch (filter) {\n      case 'completed':\n        return todos.filter(({ completed }) => completed);\n\n      case 'active':\n        return todos.filter(({ completed }) => !completed);\n\n      default:\n        return [...todos];\n    }\n  }, [filter, todos]);\n\n  return (\n    <ul id=\"todos-list\">\n      {filteredTodos.map((todo, idx) => (\n        <Todo key={todo.id} todo={todo} idx={idx} toggleComplete={toggleComplete} />\n      ))}\n    </ul>\n  );\n};\n\nexport default React.memo(TodoList);\n","import { useCallback, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { TodoList, AddTodo, Filter } from './components';\nimport './App.css';\n\n/**\n * todo interface\n * {\n *   id: string\n *   text: string\n *   completed: boolean\n *   createdAt: string\n * }\n */\n\nfunction App() {\n  const [todos, setTodos] = useState(JSON.parse(localStorage.getItem('todos') || '[]'));\n  const [filter, setFilter] = useState('all');\n  const [backgroundColor, setBackgroundColor] = useState('#eeeeee');\n\n  const addTodo = useCallback(\n    inputText => {\n      const newTodos = [...todos, { id: uuid(), text: inputText, completed: false, createdAt: new Date() }];\n      localStorage.setItem('todos', JSON.stringify(newTodos));\n      setTodos(newTodos);\n    },\n    [todos],\n  );\n\n  const toggleComplete = useCallback(\n    e => {\n      const todoIdx = e.target.dataset.idx;\n      const newTodos = [...todos];\n      newTodos.splice(todoIdx, 1, { ...todos[todoIdx], completed: !todos[todoIdx].completed });\n      setTodos(newTodos);\n      localStorage.setItem('todos', JSON.stringify(newTodos));\n    },\n    [todos],\n  );\n\n  const changeBackgroundColor = useCallback(e => {\n    setBackgroundColor(e.target.value);\n  }, []);\n\n  const changeFilter = useCallback(e => {\n    setFilter(e.target.getAttribute('data-type'));\n  }, []);\n\n  return (\n    <div style={{ backgroundColor }}>\n      <main className=\"App\">\n        <Filter\n          filter={filter}\n          changeFilter={changeFilter}\n          backgroundColor={backgroundColor}\n          changeBackgroundColor={changeBackgroundColor}\n        />\n        <TodoList filter={filter} todos={todos} toggleComplete={toggleComplete} />\n        <AddTodo addTodo={addTodo} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}